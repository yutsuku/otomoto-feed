name: Generate Atom/RSS Feed from Otomoto JSON

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour; adjust as needed
  workflow_dispatch: # Allows manual triggering
  
permissions:
  contents: write # Grants write access to repository contents

jobs:
  generate-feed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch JSON data from Otomoto
        run: |
          curl -o data.json \
          -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:137.0) Gecko/20100101 Firefox/137.0' \
          -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \
          -H 'Accept-Language: en-US,en;q=0.5' \
          -H 'Sec-GPC: 1' \
          -H 'Connection: keep-alive' \
          -H 'Upgrade-Insecure-Requests: 1' \
          -H 'Sec-Fetch-Dest: document' \
          -H 'Sec-Fetch-Mode: navigate' \
          -H 'Sec-Fetch-Site: cross-site' \
          -H 'Sec-Fetch-User: ?1' \
          -H 'Priority: u=0, i' \
          -H 'TE: trailers' \
          "https://www.otomoto.pl/graphql?operationName=listingScreen&variables=%7B%22filters%22%3A%5B%7B%22name%22%3A%22category_id%22%2C%22value%22%3A%2229%22%7D%2C%7B%22name%22%3A%22filter_enum_show_pir%22%2C%22value%22%3A%221%22%7D%5D%2C%22includeCepik%22%3Afalse%2C%22includeFiltersCounters%22%3Afalse%2C%22includeNewPromotedAds%22%3Afalse%2C%22includePriceEvaluation%22%3Afalse%2C%22includePromotedAds%22%3Afalse%2C%22includeRatings%22%3Afalse%2C%22includeSortOptions%22%3Afalse%2C%22includeSuggestedFilters%22%3Afalse%2C%22itemsPerPage%22%3A30%2C%22maxAge%22%3A60%2C%22page%22%3A1%2C%22promotedInput%22%3A%7B%7D%7D&extensions=%7B%22persistedQuery%22%3A%7B%22sha256Hash%22%3A%221a840f0ab7fbe2543d0d6921f6c963de8341e04a4548fd1733b4a771392f900a%22%2C%22version%22%3A1%7D%7D"
          cat data.json
          jq . data.json

      - name: Convert JSON to Atom Feed
        run: |
          set -o errexit
          set -o nounset
          set -o pipefail
          set -o xtrace # Uncomment this line for debugging purposes
          # Create docs directory if it doesn't exist
          mkdir -p docs
          # Start the Atom feed
          cat <<EOF > docs/feed.atom
          <?xml version="1.0" encoding="utf-8"?>
          <feed xmlns="http://www.w3.org/2005/Atom">
            <title>Otomoto Car Listings Feed</title>
            <link href="https://yutsuku.github.io/otomoto-feed/feed.atom" rel="self"/>
            <link href="https://www.otomoto.pl"/>
            <updated>$(date -u +"%Y-%m-%dT%H:%M:%SZ")</updated>
            <id>https://yutsuku.github.io/otomoto-feed/</id>
          EOF
          # Extract entries from JSON and append to feed with thumbnail, mileage, and year
          jq -r '.data.advertSearch.edges[].node | "<entry><title>\(.title // "Untitled")</title><link href=\"\(.url)\"/><id>\(.id)</id><updated>\(.createdAt // "2025-04-10T00:00:00Z")</updated><summary><![CDATA[Price: \(.price.amount.value // "N/A") \(.price.amount.currencyCode // "") - \(.shortDescription // "No description") - Location: \(.location.city.name // "Unknown"), \(.location.region.name // "Unknown") - Mileage: \(.parameters[] | select(.key == "mileage") | .displayValue // "N/A") - Year: \(.parameters[] | select(.key == "year") | .displayValue // "N/A")<br><img src=\"\(.thumbnail.x2 // "https://via.placeholder.com/640x480")\" alt=\"Thumbnail\" width=\"640\" height=\"480\"/>]]></summary></entry>"' data.json >> docs/feed.atom
          # Close the feed
          echo "</feed>" >> docs/feed.atom
      
      - name: Convert JSON to RSS Feed
        run: |
          # Create docs directory if it doesn't exist
          mkdir -p docs
          # Start the RSS feed
          cat <<EOF > docs/feed.rss
          <?xml version="1.0" encoding="utf-8"?>
          <rss version="2.0">
            <channel>
              <title>Otomoto Car Listings Feed</title>
              <link>https://www.otomoto.pl</link>
              <description>Latest car listings from Otomoto</description>
              <lastBuildDate>$(date -u +"%a, %d %b %Y %H:%M:%S GMT")</lastBuildDate>
          EOF
          # Extract entries from JSON and append to feed
          jq -r '.data.advertSearch.edges[].node | "<item><title>\(.title // "Untitled")</title><link>\(.url)</link><guid>\(.id)</guid><pubDate>\(.createdAt // "Thu, 10 Apr 2025 00:00:00 GMT")</pubDate><description><![CDATA[Price: \(.price.amount.value // "N/A") \(.price.amount.currencyCode // "") - \(.shortDescription // "No description") - Location: \(.location.city.name // "Unknown"), \(.location.region.name // "Unknown") - Mileage: \(.parameters[] | select(.key == "mileage") | .displayValue // "N/A") - Year: \(.parameters[] | select(.key == "year") | .displayValue // "N/A")<br><img src=\"\(.thumbnail.x2 // "https://via.placeholder.com/640x480")\" alt=\"Thumbnail\" width=\"640\" height=\"480\"/>]]></description></item>"' data.json >> docs/feed.rss
          # Close the feed
          cat <<EOF >> docs/feed.rss
            </channel>
          </rss>
          EOF

      - name: Commit and push feed
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add docs/feed.atom
          git add docs/feed.rss
          git commit -m "Update Otomoto feed" || echo "No changes to commit"
          git push
